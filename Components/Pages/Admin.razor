@page "/admin"
@using labb3_Blazor.Models
@using labb3_Blazor.Services
@inject ApiService apiService

<h2>Admin</h2>

<!-- Teknologi -->
<section class="mb-5">
    <h3>Lägg till Teknologi</h3>
    <EditForm Model="newTechnology" OnValidSubmit="HandleValidSubmitTechnology" FormName="techForm">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label for="techName" class="form-label">Namn</label>
            <InputText id="techName" class="form-control" @bind-Value="newTechnology.Name" placeholder="Ange namn" />
        </div>

        <div class="mb-3">
            <label for="techYears" class="form-label">År av Erfarenhet</label>
            <InputNumber id="techYears" class="form-control" @bind-Value="newTechnology.YearsOfExperience" placeholder="Ange antal år" />
        </div>

        <div class="mb-3">
            <label for="techSkill" class="form-label">Kompetensnivå</label>
            <InputText id="techSkill" class="form-control" @bind-Value="newTechnology.SkillLevel" placeholder="Ange kompetensnivå" />
        </div>

        <div class="mb-3">
            <label for="techImage" class="form-label">Bild URL</label>
            <InputText id="techImage" class="form-control" @bind-Value="newTechnology.ImageUrl" placeholder="Ange bild URL" />
        </div>

        <button class="btn btn-primary" type="submit">Lägg till Teknologi</button>
    </EditForm>

   

    @if (!string.IsNullOrEmpty(techMessage))
    {
        <div class="mt-2 alert alert-info">@techMessage</div>
    }
</section>

<!-- Certifikat -->
<section class="mb-5">
    <h3>Lägg till Certifikat</h3>
    <EditForm Model="newCertificate" OnValidSubmit="HandleValidSubmitCertificate" FormName="certForm">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label for="certTitle" class="form-label">Titel</label>
            <InputText id="certTitle" class="form-control" @bind-Value="newCertificate.Title" placeholder="Ange titel" />
        </div>

        <div class="mb-3">
            <label for="certStatus" class="form-label">Status</label>
            <InputText id="certStatus" class="form-control" @bind-Value="newCertificate.Status" placeholder="Ange status" />
        </div>

        <div class="mb-3">
            <label for="certCredential" class="form-label">Credential URL</label>
            <InputText id="certCredential" class="form-control" @bind-Value="newCertificate.CredentialUrl" placeholder="Ange credential URL" />
        </div>

        <div class="mb-3">
            <label for="certImage" class="form-label">Bild URL</label>
            <InputText id="certImage" class="form-control" @bind-Value="newCertificate.ImageUrl" placeholder="Ange bild URL" />
        </div>

        <button class="btn btn-primary" type="submit">Lägg till Certifikat</button>
    </EditForm>
    @if (!string.IsNullOrEmpty(certMessage))
    {
        <div class="mt-2 alert alert-info">@certMessage</div>
    }
</section>

<!-- Erfarenhet -->
<section class="mb-5">
    <h3>Lägg till Erfarenhet</h3>
    <EditForm Model="newExperience" OnValidSubmit="HandleValidSubmitExperience" FormName="expForm">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label for="expCompany" class="form-label">Företag</label>
            <InputText id="expCompany" class="form-control" @bind-Value="newExperience.Company" placeholder="Ange företag" />
        </div>

        <div class="mb-3">
            <label for="expRole" class="form-label">Roll</label>
            <InputText id="expRole" class="form-control" @bind-Value="newExperience.Role" placeholder="Ange roll" />
        </div>

        <div class="mb-3">
            <label for="expDate" class="form-label">Datum</label>
            <InputText id="expDate" class="form-control" @bind-Value="newExperience.Date" placeholder="Ange datum" />
        </div>

        <div class="mb-3">
            <label for="expImage" class="form-label">Bild URL</label>
            <InputText id="expImage" class="form-control" @bind-Value="newExperience.ImageUrl" placeholder="Ange bild URL" />
        </div>

        <button class="btn btn-primary" type="submit">Lägg till Erfarenhet</button>
    </EditForm>
    @if (!string.IsNullOrEmpty(expMessage))
    {
        <div class="mt-2 alert alert-info">@expMessage</div>
    }
</section>

@code {
    // Instanser
    public Technology newTechnology { get; set; } = new Technology();
    public Certificate newCertificate { get; set; } = new Certificate();
    public Experience newExperience { get; set; } = new Experience();

    // Meddelanden
    public string techMessage { get; set; } = "";
    public string certMessage { get; set; } = "";
    public string expMessage { get; set; } = "";

    // Hantera inlämning av Teknologi
    public async Task HandleValidSubmitTechnology()
    {
        Console.WriteLine("Submit clicked(form)");
        var createdTech = await apiService.AddTechnologyAsync(newTechnology);
       
        if (createdTech != null)
        {
            techMessage = "Teknologi tillagd!";
            newTechnology = new Technology();
        }
        else
        {
            techMessage = "Fel vid tillägg av teknologi.";
        }
    }


    // Hantera inlämning av Certifikat
    public async Task HandleValidSubmitCertificate()
    {
        Console.WriteLine("Submit clicked");
        var createdCert = await apiService.AddCertificateAsync(newCertificate);
        if (createdCert != null)
        {
            certMessage = "Certifikat tillagt!";
            newCertificate = new Certificate() { Title = "", Status = "", CredentialUrl = "", ImageUrl = "" };
        }
        else
        {
            certMessage = "Fel vid tillägg av certifikat.";
        }
    }

    // Hantera inlämning av Erfarenhet
    public async Task HandleValidSubmitExperience()
    {
        Console.WriteLine("Submit clicked");
        var createdExp = await apiService.AddExperienceAsync(newExperience);
        if (createdExp != null)
        {
            expMessage = "Erfarenhet tillagd!";
            newExperience = new Experience() { Company = "", Role = "", Date = "", ImageUrl = "" };
        }
        else
        {
            expMessage = "Fel vid tillägg av erfarenhet.";
        }
    }
}
